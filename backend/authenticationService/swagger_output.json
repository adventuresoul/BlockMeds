{
  "swagger": "2.0",
  "info": {
    "title": "BlockMeds API",
    "description": "Endpoint for user authentication in the BlockMeds platform, allowing Patients, Doctors, and Pharmacists to log in and obtain a secure access token.",
    "version": "1.0.0"
  },
  "host": "ip_address:5001",
  "description": "BlockMeds authentication service URL",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/test": {
      "get": {
        "description": "Test endpoint to check API status",
        "responses": {
          "200": {
            "description": "API is working"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticate users and return a JWT token for session management.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 0,
                  "description": "User role identifier: 0 for Patient, 1 for Doctor, 2 for Pharmacist."
                },
                "email": {
                  "type": "string",
                  "example": "user@example.com",
                  "description": "Registered email of the user."
                },
                "password": {
                  "type": "string",
                  "example": "password123",
                  "description": "User's account password."
                }
              },
              "required": ["id", "email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Login successful"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1..."
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing fields or invalid user type)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid credentials)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Invalid credentials"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Login failed. Please try again later."
                }
              }
            }
          }
        }
      }
    }
,
    "/register/patient": {
      "post": {
        "description": "Endpoint for patient registration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "example": "John" },
                "lastName": { "type": "string", "example": "Doe" },
                "dateOfBirth": { "type": "string", "example": "2000-01-01" },
                "gender": { 
                  "type": "string", 
                  "enum": ["male", "female"], 
                  "example": "male" 
                },
                "contactNumber": { "type": "string", "example": "1234567890" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "password": { "type": "string", "example": "password123" },
                "profileUrl": { "type": "string", "example": "http://example.com/profile.jpg" },
                "prescriptionHistory": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              },
              "required": ["firstName", "lastName", "dateOfBirth", "gender", "contactNumber", "email", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Patient registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": true },
                "message": { "type": "string", "example": "Patient registered successfully" },
                "patient": {
                  "type": "object",
                  "properties": {
                    "uniqueid": { "type": "string", "example": "12345" },
                    "firstName": { "type": "string", "example": "John" },
                    "lastName": { "type": "string", "example": "Doe" },
                    "email": { "type": "string", "example": "john.doe@example.com" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": false },
                "error": { "type": "string", "example": "Missing required fields" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": false },
                "error": { "type": "string", "example": "Registration failed. Please try again later." }
              }
            }
          }
        }
      }
    }
    ,
    "/register/doctor": {
      "post": {
        "description": "Endpoint for doctor registration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "example": "Jane" },
                "lastName": { "type": "string", "example": "Smith" },
                "dateOfBirth": { "type": "string", "example": "1980-05-20" },
                "gender": { "type": "string", "example": "female" },
                "contactNumber": { "type": "string", "example": "9876543210" },
                "email": { "type": "string", "example": "jane.smith@example.com" },
                "password": { "type": "string", "example": "password456" },
                "ethereumWalletAddress": { "type": "string", "example": "0xAbC123..." },
                "profileUrl": { "type": "string", "example": "http://example.com/doctor-profile.jpg" },
                "specialization": { "type": "string", "example": "Cardiology" },
                "medicalLicenseId": { "type": "string", "example": "ML123456" },
                "medicalLicenseCertificateUrl": { "type": "string", "example": "http://example.com/license.pdf" }
              },
              "required": [
                "firstName",
                "lastName",
                "dateOfBirth",
                "gender",
                "contactNumber",
                "email",
                "password",
                "ethereumWalletAddress",
                "specialization",
                "medicalLicenseId"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Doctor registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": true },
                "message": { "type": "string", "example": "Doctor registered successfully" },
                "doctor": {
                  "type": "object",
                  "properties": {
                    "firstName": { "type": "string", "example": "Jane" },
                    "lastName": { "type": "string", "example": "Smith" },
                    "email": { "type": "string", "example": "jane.smith@example.com" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": false },
                "error": { "type": "string", "example": "Missing required fields" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": false },
                "error": { "type": "string", "example": "Registration failed. Please try again later." }
              }
            }
          }
        }
      }
    },
    "/register/pharmacist": {
      "post": {
        "description": "Endpoint for pharmacist registration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "example": "Alex" },
                "lastName": { "type": "string", "example": "Johnson" },
                "dateOfBirth": { "type": "string", "example": "1990-11-15" },
                "gender": { "type": "string", "example": "male" },
                "contactNumber": { "type": "string", "example": "1234567890" },
                "email": { "type": "string", "example": "alex.johnson@example.com" },
                "password": { "type": "string", "example": "securepass123" },
                "ethereumWalletAddress": { "type": "string", "example": "0xDeF456..." },
                "profileUrl": { "type": "string", "example": "http://example.com/pharmacist-profile.jpg" },
                "pharmacyLicenseId": { "type": "string", "example": "PL789123" }
              },
              "required": [
                "firstName",
                "lastName",
                "dateOfBirth",
                "gender",
                "contactNumber",
                "email",
                "password",
                "ethereumWalletAddress",
                "pharmacyLicenseId"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Pharmacist registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Pharmacist registered successfully" },
                "pharmacist": {
                  "type": "object",
                  "properties": {
                    "firstName": { "type": "string" },
                    "lastName": { "type": "string" },
                    "email": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": false },
                "error": { "type": "string", "example": "Missing required fields" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": false },
                "error": { "type": "string", "example": "Registration failed. Please try again later." }
              }
            }
          }
        }
      }
    }
  }
}